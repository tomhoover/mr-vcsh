[DEFAULT]

jobs = 5
git_gc = git gc "$@"
git_dum = git diff --name-status upstream/master 2>/dev/null || true

# Show verbose output about tags, branches or remotes
git_tags = git tag -l
git_branches = git branch -a
git_remotes = git remote -v

# Tests used below.
# - anon checks whether this is an anonymous checkout, by testing what url
#   $HOME uses
# - full checks whether I probably want a full checkout (quite large),
#   if not, the checkout is minimal
# - on checks whether the given host basename is one of the listed
#   values. A value can also have a username in it, ie "joey@dodo".
# - mylaptop only succeeds if it's on my main development laptop, which
#   gets lots of extra cruft
lib =
    hostname="$(hostname)"
    whoami="$(whoami)"
    anon() {
        ( GIT_CONFIG=$HOME/.git/config git config remote.origin.url || cat .git/remotes/origin ) | grep -q 'git://'
    }
    full() {
        test "$whoami" = joey && ! anon
    }
    on() {
        for host in $@; do
            if [ "${host%@*}" != "${host#*@}" ]; then
                if [ "$whoami" != "${host%@*}" ]; then
                    continue
                fi
                host="${host#*@}"
            fi
            if [ "$hostname" = "$host" ]; then
                return 0
            fi
        done
        return 1
    }
    mylaptop() {
        on tom@ariel
    }
    root() {
        test "$whoami" = root
    }

### common repos

[.gnupg]
checkout =
    git clone 'git@git.local:gnupg.git' '.gnupg'
    cd "$MR_REPO"
    git remote add bethel bethel.local:git/gnupg.git
    git remote add drobo drobo.local:git/gnupg.git
    git remote add gabriel gabriel.local:git/gnupg.git
    git remote add ironkey /Volumes/IRONKEY8/git/gnupg.git
skip = ! mylaptop
push = git push origin; git push bethel; git push drobo; git push gabriel; git push ironkey 2>/dev/null || true
fixups = chmod -R go= ~/.gnupg

[bin]
checkout = 
    git clone 'https://github.com/tomhoover/bin.git' 'bin'
    cd "$MR_REPO"
    git remote add gitolite git@git.local:pub/bin.git
push = git push origin; git push gitolite || true
fixups = chmod 755 ~/bin

[src/simplesnap]
checkout =
    git clone 'https://github.com/tomhoover/simplesnap.git' 'simplesnap'
    cd "$MR_REPO"
    git remote add upstream https://github.com/jgoerzen/simplesnap.git
skip = root
fixups =
    [ ! -f /usr/local/sbin/simplesnap -o ! -f /usr/local/sbin/simplesnapwrap ] && echo "" && echo "`tput setaf 1`be sure to 'cd $MR_REPO && sudo make install'`tput sgr0`" || true
    [ "$MR_REPO/simplesnap" -nt /usr/local/sbin/simplesnap ]         && echo "" && echo "be sure to '`tput setaf 1`cd $MR_REPO && sudo make install`tput sgr0`'" || true
    [ "$MR_REPO/simplesnapwrap" -nt /usr/local/sbin/simplesnapwrap ] && echo "" && echo "be sure to '`tput setaf 1`cd $MR_REPO && sudo make install`tput sgr0`'" || true

[src/git.spwhitton.name/dotfiles]
checkout = git clone 'git://spwhitton.name/dotfiles.git' 'dotfiles'
skip = ! mylaptop || ([ "$1" = update ] && ! hours_since "$1" 12)
push = :
fixups = ln -sf "$MR_REPO/archive/bin/clean-github-pr.py" "$HOME/bin/clean-github-pr.py"

[src/zLinux-bin]
checkout =
    git clone 'git@git.local:zLinux-bin.git' 'zLinux-bin'
    cd "$MR_REPO"
    git remote add bethel bethel.local:git/zLinux-bin.git
    git remote add drobo drobo.local:git/zLinux-bin.git
    git remote add gabriel gabriel.local:git/zLinux-bin.git
skip = ! mylaptop
push = git push origin; git push bethel; git push drobo; git push gabriel || true

[src/dotfiles]
checkout = git clone 'https://github.com/tomhoover/dotfiles.git' 'dotfiles'
skip = ! mylaptop

[src/tomhoover.github.io]
checkout = git clone 'https://github.com/tomhoover/tomhoover.github.io.git' 'tomhoover.github.io'
skip = ! mylaptop

[src/jekyll-tomhoover]
checkout =
    git clone 'https://github.com/tomhoover/jekyll-tomhoover.git' 'jekyll-tomhoover'
    cd "$MR_REPO"
    git remote add upstream https://github.com/mmistakes/so-simple-theme.git
skip = ! mylaptop

[src/tomhoover-hugo]
checkout = git clone 'https://github.com/tomhoover/tomhoover-hugo.git' 'tomhoover-hugo'
skip = ! mylaptop

### read-only repos

[.oh-my-zsh]
checkout = git clone 'https://github.com/robbyrussell/oh-my-zsh.git' '.oh-my-zsh'
skip = ([ "$1" = update ] && ! hours_since "$1" 12)
push = :
update = git pull --rebase --autostash
fixups = chmod 755 ~/.oh-my-zsh

[src/github.com/nojhan/liquidprompt]
checkout = git clone 'https://github.com/nojhan/liquidprompt.git' 'liquidprompt'
skip = ([ "$1" = update ] && ! hours_since "$1" 12)
push = :
fixups = chmod 755 ~/src

### included repos

include = cat ~/.config/mr/`uname`.mrconfig 2>/dev/null || true
include = cat ~/.config/mr/`hostname -s`.mrconfig 2>/dev/null || true
include = cat ~/.config/mr/ha.mrconfig || true
include = cat ~/.config/mr/src.mrconfig || true
include = cat ~/.config/mr/vcsh.mrconfig || true
