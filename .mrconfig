[DEFAULT]

jobs = 5
git_gc = git gc "$@"
git_dum = git diff --name-status upstream/master 2>/dev/null || true

# Show verbose output about tags, branches or remotes
git_tags = git tag -l
git_branches = git branch -a
git_remotes = git remote -v

# Tests used below.
# - anon checks whether this is an anonymous checkout, by testing what url
#   $HOME uses
# - full checks whether I probably want a full checkout (quite large),
#   if not, the checkout is minimal
# - on checks whether the given host basename is one of the listed
#   values. A value can also have a username in it, ie "joey@dodo".
# - mylaptop only succeeds if it's on my main development laptop, which
#   gets lots of extra cruft
lib =
    hostname="$(hostname -s)"
    whoami="$(whoami)"
    anon() {
        ( GIT_CONFIG=$HOME/.git/config git config remote.origin.url || cat .git/remotes/origin ) | grep -q 'git://'
    }
    full() {
        test "$whoami" = joey && ! anon
    }
    on() {
        for host in $@; do
            if [ "${host%@*}" != "${host#*@}" ]; then
                if [ "$whoami" != "${host%@*}" ]; then
                    continue
                fi
                host="${host#*@}"
            fi
            if [ "$hostname" = "$host" ]; then
                return 0
            fi
        done
        return 1
    }
    mylaptop() {
        on tom@ariel || on tom@bethel || on tom@theophilus
    }
    hass() {
        mylaptop || on tom@ha
    }
    root() {
        test "$whoami" = root
    }
    apt() {
        command -v apt-get
    }
    zfs() {
        command -v zpool && command -v zfs
    }

### common repos

[$HOME/.ansible]
checkout =
    git clone 'https://github.com/tomhoover/ansible.git' '.ansible'
    cd "$MR_REPO"
    git remote add gitolite git@gitolite.t0m.us:tom/ansible.git
skip = ! mylaptop
push = git push origin master ; git push gitolite || true

[$HOME/.dotfiles]
checkout =
    git clone 'https://github.com/tomhoover/dotfiles.git' '.dotfiles'
    cd "$MR_REPO"
    git remote add gitolite git@gitolite.t0m.us:tom/dotfiles.git
skip = ([ "$1" = update ] && ! hours_since "$1" 12)
push = git push origin master ; git push gitolite || true

[$HOME/.gnupg]
checkout =
    git clone 'git@gitolite.t0m.us:gnupg.git' '.gnupg'
    cd "$MR_REPO"
    git remote add gabriel gabriel:git/gnupg.git
    git remote add synology SYNOLOGY:git/gnupg.git
    # git remote add ironkey /Volumes/IRONKEY8/git/gnupg.git
skip = ! mylaptop
push = git push origin; git push synology; git push gabriel 2>/dev/null || true
fixups = chmod -R go= $HOME/.gnupg

[$HOME/bin]
checkout =
    git clone 'https://github.com/tomhoover/bin.git' 'bin'
    cd "$MR_REPO"
    git remote add gitolite git@gitolite.t0m.us:tom/bin.git
push = git push origin master ; git push gitolite || true
fixups = chmod 755 $HOME/bin

[$HOME/fin]
checkout =
    git clone 'git@gitolite.t0m.us:fin.git' 'fin'
    cd "$MR_REPO"
    git remote add gabriel gabriel:git/fin.git
    git remote add synology SYNOLOGY:git/fin.git
skip = ! mylaptop
push = git commit -am "$(date +%y%m%d)" && git push origin; git push synology; git push gabriel 2>/dev/null || true

[$HOME/src/git.spwhitton.name/dotfiles]
checkout =
    git clone 'git@gitolite.t0m.us:tom/spwhitton_dotfiles.git' 'dotfiles'
    cd "$MR_REPO"
    git remote add upstream git://spwhitton.name/dotfiles.git
skip = ! mylaptop || ([ "$1" = update ] && ! hours_since "$1" 12)
fixups =
    chmod 755 $HOME/src
    mkdir -p $HOME/.local/bin
    chmod go= $HOME/.local && chmod 755 $HOME/.local/bin
    ln -sf "$MR_REPO/archive/bin/clean-github-pr.py" "$HOME/.local/bin/clean-github-pr.py"

[$HOME/src/zLinux-bin]
checkout =
    git clone 'git@gitolite.t0m.us:zLinux-bin.git' 'zLinux-bin'
    cd "$MR_REPO"
    git remote add gabriel gabriel:git/zLinux-bin.git
    git remote add synology SYNOLOGY:git/zLinux-bin.git
skip = ! mylaptop || ([ "$1" = update ] && ! hours_since "$1" 12)
push = git push origin; git push synology; git push gabriel 2>/dev/null || true
fixups = chmod 755 $HOME/src

[$HOME/src/tomhoover.github.io]
checkout = git clone 'https://github.com/tomhoover/tomhoover.github.io.git' 'tomhoover.github.io'
skip = ! mylaptop
fixups = chmod 755 $HOME/src

[$HOME/src/jekyll-tomhoover]
checkout =
    git clone 'https://github.com/tomhoover/jekyll-tomhoover.git' 'jekyll-tomhoover'
    cd "$MR_REPO"
    git remote add upstream https://github.com/mmistakes/so-simple-theme.git
skip = ! mylaptop
fixups = chmod 755 $HOME/src

[$HOME/src/pgp-quick]
checkout =
    git clone 'https://github.com/tomhoover/pgp-quick.git' 'pgp-quick'
    cd "$MR_REPO"
    git remote add upstream https://github.com/kasparsd/pgp-quick.git
skip = ! mylaptop || ([ "$1" = update ] && ! hours_since "$1" 12)
fixups =
    chmod 755 $HOME/src
    mkdir -p $HOME/.local/bin
    chmod go= $HOME/.local && chmod 755 $HOME/.local/bin
    ln -sf "$MR_REPO/decrypt-clipboard" "$HOME/.local/bin/decrypt-clipboard.sh"
    ln -sf "$MR_REPO/decrypt-file" "$HOME/.local/bin/decrypt-file.sh"
    ln -sf "$MR_REPO/encrypt-clipboard" "$HOME/.local/bin/encrypt-clipboard.sh"
    ln -sf "$MR_REPO/encrypt-file" "$HOME/.local/bin/encrypt-file.sh"
    ln -sf "$MR_REPO/clearsign-clipboard" "$HOME/.local/bin/sign-clipboard.sh"
    ln -sf "$MR_REPO/verify-clipboard" "$HOME/.local/bin/verify-clipboard.sh"

##### [$HOME/src/tomhoover-hugo]
##### checkout = git clone 'https://github.com/tomhoover/tomhoover-hugo.git' 'tomhoover-hugo'
##### skip = ! mylaptop
##### fixups = chmod 755 $HOME/src

### read-only repos

[$HOME/src/github.com/nojhan/liquidprompt]
checkout = git clone 'https://github.com/nojhan/liquidprompt.git' 'liquidprompt'
skip = ([ "$1" = update ] && ! hours_since "$1" 12)
push = :
fixups =
    ln -nsf "$HOME/src/github.com" "$HOME/src/gh"
    chmod 755 $HOME/src
    mkdir -p $HOME/.local/share
    ln -sf "$MR_REPO/liquidprompt" $HOME/.local/share/liquidprompt
    chmod go= $HOME/.local && chmod go= $HOME/.local/share

[$HOME/src/github.com/rupa/z]
checkout = git clone 'https://github.com/rupa/z.git' 'z'
skip = ([ "$1" = update ] && ! hours_since "$1" 12)
push = :
fixups =
    chmod 755 $HOME/src
    mkdir -p $HOME/.local/share
    ln -sf "$MR_REPO/z.sh" $HOME/.local/share/z.sh
    chmod go= $HOME/.local && chmod go= $HOME/.local/share

[$HOME/src/github.com/jimsalterjrs/sanoid]
checkout = git clone 'https://github.com/jimsalterjrs/sanoid.git' 'sanoid'
skip = ! zfs || ([ "$1" = update ] && ! hours_since "$1" 12)
push = :
fixups =
    chmod 755 $HOME/src
    ln -sf "$MR_REPO/syncoid" /usr/local/sbin/syncoid

[$HOME/src/github.com/zfsnap/zfsnap]
checkout = git clone 'https://github.com/zfsnap/zfsnap.git' 'zfsnap'
skip = ! zfs || ([ "$1" = update ] && ! hours_since "$1" 12)
push = :
fixups =
    chmod 755 $HOME/src
    ln -sf "$MR_REPO/sbin/zfsnap.sh" /usr/local/sbin/zfsnap.sh
    ln -sf "$MR_REPO/man/man8/zfsnap.8" /usr/local/share/man/man8/zfsnap.8

### included repos

# include = cat $HOME/.config/mr/`uname`.mrconfig || true
# include = cat $HOME/.config/mr/`hostname -s`.mrconfig || true
include = cat $HOME/.config/mr/`uname`.mrconfig 2>/dev/null || true
include = cat $HOME/.config/mr/`hostname -s`.mrconfig 2>/dev/null || true
include = cat $HOME/.config/mr/home_automation.mrconfig || true
include = cat $HOME/.config/mr/src.mrconfig || true
include = cat $HOME/.config/mr/vcsh.mrconfig || true
include = cat $HOME/src/.mrconfig || true
# include = cat $HOME/src/github.com/.mrconfig || true
